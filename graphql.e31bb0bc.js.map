{"version":3,"sources":["router/Router.js","src/loginPage.js","src/mainPage.js","index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Router","_createClass","options","_this","_classCallCheck","_defineProperty","path","cb","routes","push","i","length","slice","toString","replace","fragment","mode","clearSlashes","decodeURI","window","location","pathname","search","root","match","href","arguments","undefined","history","pushState","concat","clearInterval","interval","setInterval","current","getFragment","some","route","shift","apply","listen","_default","exports","default","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","err","loginPage","router","_ref","JWToken","sessionStorage","getItem","navigate","app","document","getElementById","innerHTML","container","createElement","className","append","content","title","form","id","username","required","placeholder","password","button","addEventListener","_x","_callee","cred","response","data","_callee$","_context","preventDefault","btoa","fetch","headers","ok","json","setItem","status","alert","mainPage","_mainPage","resp","user","logout","body","JSON","stringify","query","usersData","clear","header","style","marginTop","basicInformationBlock","currLevelElement","transactions","filter","element","includes","reduce","prevElement","currentElement","amount","split","attrs","firstName","lastName","email","login","studentAuditsCont","AuditRatioLb","userAuditRatio","auditR","Math","round","totalUp","totalDown","console","log","color","auditGraphCont","width","generateAuditRateGraph","convertBytesToSize","xps","sum","total","studentXpCont","userXPAmount","size","graphCont","generateXPProgressGraph","audits","canvas","setAttribute","verticalLineData","el","horizontalBarChart","Chart","labels","datasets","backgroundColor","indexAxis","responsive","aspectRatio","plugins","legend","display","tooltip","callbacks","label","context","dataIndex","scales","x","beginAtZero","position","grid","bar","barThickness","XPprogressChart","xpData","map","entity","date","Date","createdAt","xp","task","sort","b","toLocaleDateString","myChart","fill","borderColor","pointBackgroundColor","maintainAspectRatio","tooltipLabel","taskLabel","bytes","sizes","indexOf","floor","convertedValue","parseFloat","pow","toFixed","_Router","_interopRequireDefault","require","_loginPage","obj","__esModule","add","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","appendChild","remove","stackTrace","innerText","getParents","modules","parents","k","dep","Array","isArray","Function","deps","cached","cache"],"mappings":"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","file":"graphql.e31bb0bc.js","sourceRoot":"..","sourcesContent":["class Router {\r\n  routes = [];\r\n\r\n  mode = null;\r\n\r\n  root = '/';\r\n\r\n  constructor(options) {\r\n    this.mode = window.history.pushState ? 'history' : 'hash';\r\n    if (options.mode) this.mode = options.mode;\r\n    if (options.root) this.root = options.root;\r\n    this.listen();\r\n  }\r\n\r\n  add = (path, cb) => {\r\n    this.routes.push({ path, cb });\r\n    return this;\r\n  };\r\n\r\n  remove = path => {\r\n    for (let i = 0; i < this.routes.length; i += 1) {\r\n      if (this.routes[i].path === path) {\r\n        this.routes.slice(i, 1);\r\n        return this;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  flush = () => {\r\n    this.routes = [];\r\n    return this;\r\n  };\r\n\r\n  clearSlashes = path =>\r\n    path\r\n      .toString()\r\n      .replace(/\\/$/, '')\r\n      .replace(/^\\//, '');\r\n\r\n  getFragment = () => {\r\n    let fragment = '';\r\n    if (this.mode === 'history') {\r\n      fragment = this.clearSlashes(decodeURI(window.location.pathname + window.location.search));\r\n      fragment = fragment.replace(/\\?(.*)$/, '');\r\n      fragment = this.root !== '/' ? fragment.replace(this.root, '') : fragment;\r\n    } else {\r\n      const match = window.location.href.match(/(.*)$/);\r\n      fragment = match ? match[1] : '';\r\n    }\r\n    return this.clearSlashes(fragment);\r\n  };\r\n\r\n  navigate = (path = '') => {\r\n    if (this.mode === 'history') {\r\n      window.history.pushState(null, null, this.root + this.clearSlashes(path));\r\n    } else {\r\n      window.location.href = `${window.location.href.replace(/(.*)$/, '')}${path}`;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  listen = () => {\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(this.interval, 50);\r\n  };\r\n\r\n  interval = () => {\r\n    if (this.current === this.getFragment()) return;\r\n    this.current = this.getFragment();\r\n\r\n    this.routes.some(route => {\r\n      const match = this.current.match(route.path);\r\n      if (match) {\r\n        match.shift();\r\n        route.cb.apply({}, match);\r\n        return match;\r\n      }\r\n      return false;\r\n    });\r\n  };\r\n}\r\n\r\nexport default Router;\r\n","\r\n\r\nexport function loginPage(router){\r\n    let JWToken = sessionStorage.getItem('JWToken')\r\n    if (JWToken != null && JWToken != undefined){\r\n        router.navigate(\"/\")\r\n        return\r\n    }\r\n    let app = document.getElementById(\"app\")\r\n    app.innerHTML = \"\"\r\n    \r\n    \r\n\r\n    let container = document.createElement('div')\r\n    container.className = \"container\"\r\n    app.append(container)\r\n\r\n    let content = document.createElement('div')\r\n    content.className = \"content\"\r\n    container.append(content)\r\n\r\n    let title = document.createElement(\"h2\")\r\n    title.innerHTML = \"Login\"\r\n    content.append(title)\r\n\r\n    let form = document.createElement(\"form\")\r\n    form.id = \"loginForm\"\r\n    content.append(form)\r\n    \r\n    let username = document.createElement(\"input\")\r\n    username.type = \"text\"\r\n    username.name = \"username\"\r\n    username.required = true\r\n    username.placeholder = \"Enter your username\"\r\n\r\n    let password = document.createElement(\"input\")\r\n    password.type = \"password\"\r\n    password.name = \"password\"\r\n    password.required = true\r\n    password.placeholder = \"Enter your password\"\r\n\r\n    let button = document.createElement(\"button\")\r\n    button.type = \"submit\"\r\n    button.name = \"username\"\r\n    button.innerHTML = \"submit\"\r\n\r\n    form.append(username,password,button)\r\n\r\n    form.addEventListener(\"submit\", async function(e){\r\n        e.preventDefault();\r\n        const cred = btoa(`${username.value}:${password.value}`)\r\n\r\n        const response = await fetch('https://01.kood.tech/api/auth/signin',{\r\n            method:'POST',\r\n            headers:{\r\n                'Authorization': `Basic ${cred}`\r\n            }\r\n        });\r\n\r\n        if(response.ok){\r\n            const data = await response.json();\r\n            sessionStorage.setItem(\"JWToken\",data);\r\n            router.navigate('/')\r\n        }else{\r\n            \r\n            (response.status === 403 ? (alert('Incorrect password'),password.value = '') : (alert('User doesnt exist'),form.reset()))\r\n        }\r\n    })\r\n\r\n    \r\n}","export async function mainPage(router){\r\n    \r\n    const JWToken = sessionStorage.getItem('JWToken');\r\n    if (JWToken === null || JWToken === undefined) {\r\n        router.navigate('/login')\r\n        return\r\n    }\r\n\r\n    const response = await fetch(\"https://01.kood.tech/api/graphql-engine/v1/graphql\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Authorization': `Bearer ${JWToken}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            query:`\r\n            {\r\n                user{\r\n                    id\r\n                    login\r\n                    profile\r\n                    attrs\r\n                    totalUp\r\n                    totalDown\r\n                    transactions(order_by: { createdAt: desc }) {\r\n                        id\r\n                        type\r\n                        amount\r\n                        createdAt\r\n                        path\r\n                    }\r\n                }\r\n            }\r\n            \r\n            `\r\n        })\r\n    });\r\n    \r\n    const resp = await response.json()\r\n\r\n    const user = resp.data.user\r\n\r\n    usersData(user[0])\r\n    let logout = document.getElementById(\"logout\")\r\n    logout.addEventListener(\"click\", function(){\r\n        let JWToken = sessionStorage.getItem(\"JWToken\")\r\n        if (JWToken != null && JWToken != undefined) {\r\n            sessionStorage.clear();\r\n            router.navigate('/login')\r\n        }\r\n    })\r\n\r\n}\r\n\r\nfunction usersData(user){\r\n    let app = document.getElementById(\"app\")\r\n    let header = document.createElement(\"h1\")\r\n    header.className = \"main_header\"\r\n    header.innerHTML = \"GRAPHQL\"\r\n\r\n    app.append(header)\r\n    let container = document.createElement(\"div\")\r\n    container.className = \"container\"\r\n    container.style.marginTop = 2+'%'\r\n    app.append(container)\r\n\r\n    //user information\r\n    let basicInformationBlock = document.createElement(\"div\")\r\n    basicInformationBlock.className = \"basicInformationBlock\"\r\n    container.append(basicInformationBlock)\r\n    \r\n    const currLevelElement = user.transactions\r\n        .filter(element => element.type === \"level\" && !element.path.includes(\"piscine\") && !element.path.includes(\"rust\"))\r\n        .reduce((prevElement, currentElement) => {\r\n            return currentElement.amount > prevElement.amount ? currentElement : prevElement;\r\n    });\r\n\r\n    const path = currLevelElement.path.split(\"/\").reverse()[0]\r\n\r\n    basicInformationBlock.innerHTML = `\r\n         <h1>Welcome, ${user.attrs.firstName} ${user.attrs.lastName}</h1>\r\n         <p>${user.attrs.email}</p><p>${user.login}</p>\r\n         <p>Level: ${currLevelElement.amount}</p>\r\n         <p>Last completed task: ${path}</p>\r\n         <button id=\"logout\" style=\"margin-left:0;\">Logout</button>\r\n        \r\n    `\r\n\r\n    \r\n\r\n    //audits \r\n    let studentAuditsCont = document.createElement('div')\r\n    studentAuditsCont.className = 'auditsInformationCharts'\r\n    let AuditRatioLb = document.createElement('p')\r\n    AuditRatioLb.innerHTML = `Audits ratio`\r\n    let userAuditRatio = document.createElement('p')\r\n    let auditR = Math.round((user.totalUp / user.totalDown) * 10) / 10\r\n    console.log(auditR)\r\n    auditR > 0.4 ? userAuditRatio.innerHTML = `${auditR} Almost perfect!` : userAuditRatio.innerHTML = `${auditR} You are careful buddy.`\r\n    auditR > 0.4 ? userAuditRatio.style.color = 'hsl(170, 100%, 50%)' : userAuditRatio.style.color = 'hsl(340, 100%, 50%)'\r\n    let auditGraphCont = document.createElement('div')\r\n    auditGraphCont.style.width = '100%'\r\n    auditGraphCont.append(generateAuditRateGraph([convertBytesToSize(user.totalUp, \"MB\").amount, convertBytesToSize(user.totalDown, \"MB\").amount]))\r\n    studentAuditsCont.append(AuditRatioLb, auditGraphCont, userAuditRatio)\r\n\r\n    \r\n\r\n    //XPAmount\r\n    const xps = user.transactions.filter(element => element.type === \"xp\" && !element.path.includes(\"piscine\") && !element.path.includes(\"rust\"));\r\n    const sum = convertBytesToSize(xps.reduce((total, element) => total + element.amount, 0));\r\n    \r\n\r\n    let studentXpCont = document.createElement('div')\r\n    studentXpCont.className = 'xpcount'\r\n    let userXPAmount = document.createElement('p')\r\n    userXPAmount.innerHTML = `XP ${sum.amount} ${sum.size}`\r\n    let graphCont = document.createElement('div')\r\n    graphCont.className = 'graph-container'\r\n    graphCont.append(generateXPProgressGraph(xps))\r\n    studentXpCont.append(userXPAmount, graphCont)\r\n    \r\n\r\n    container.append(studentAuditsCont,studentXpCont)\r\n\r\n    \r\n\r\n    \r\n}\r\n\r\n\r\nfunction generateAuditRateGraph(audits) {\r\n    var canvas = document.createElement('canvas');\r\n    canvas.setAttribute('id', 'audit-chart');\r\n    var verticalLineData = ['done', 'received'];// Data for the chart\r\n    verticalLineData.forEach((el, i) => {\r\n        verticalLineData[i] = `${el}: ${audits[i]} MB`;\r\n    });\r\n    console.log(verticalLineData)\r\n    console.log(audits)\r\n    var horizontalBarChart = new Chart(canvas, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: verticalLineData,\r\n            datasets: [{\r\n                data: audits,\r\n                backgroundColor: [\r\n                    'hsl(170, 100%, 50%)', // first bar\r\n                    'hsl(0, 0%, 80%)', // second bar\r\n                ]\r\n            }]\r\n        },\r\n        options: {\r\n            indexAxis: 'y', // Rotate the chart to horizontal layout\r\n            responsive: true, // Make the chart responsive\r\n            aspectRatio: 4,\r\n            plugins: {\r\n                legend: {\r\n                    display: false \r\n                },\r\n                tooltip: {\r\n                    callbacks: {\r\n                        label: function (context) {\r\n                            let dataIndex = context.dataIndex;\r\n                            let value = audits[dataIndex];\r\n                            let label = verticalLineData[dataIndex];\r\n                            return `${value} MB`;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    display: false, \r\n                    beginAtZero: true // Start the X-axis at 0\r\n                },\r\n                y: {\r\n                    position: 'right',\r\n                    grid: {\r\n                        display: false // Hide the y-axis grid lines\r\n                    }\r\n                }\r\n            },\r\n            datasets: {\r\n                bar: {\r\n                    barThickness: 10 // Adjust the height of the bars\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return canvas\r\n}\r\n\r\nfunction generateXPProgressGraph(xps) {\r\n    let XPprogressChart = document.createElement('canvas');\r\n    XPprogressChart.setAttribute('id', 'chart');\r\n    var xpData = xps.map(function (entity) {\r\n        return {\r\n            date: new Date(entity.createdAt),\r\n            xp: entity.amount,\r\n            task: entity.path.split('/')[entity.path.split('/').length - 1]\r\n        };\r\n    });\r\n    // Sort the XP data by date in ascending order\r\n    xpData.sort(function (a, b) {\r\n        return a.date - b.date;\r\n    });\r\n    for (let i = 1; i < xpData.length; i++) {\r\n        xpData[i].xp += xpData[i - 1].xp;\r\n    }\r\n    var labels = xpData.map(function (data) {\r\n        return data.date.toLocaleDateString(); \r\n    });\r\n    var data = xpData.map(function (data) {\r\n        return convertBytesToSize(data.xp, \"KB\").amount;\r\n    });\r\n    var myChart = new Chart(XPprogressChart, {\r\n        type: 'line', \r\n        data: {\r\n            labels: labels, \r\n            datasets: [{\r\n                label: 'XP Earned', // Label for the dataset\r\n                data: data, // Y-axis data (XP amounts)\r\n                fill: false, \r\n                borderColor: 'hsl(260, 100%, 80%)',\r\n                pointBackgroundColor: 'black',\r\n            }]\r\n        },\r\n        options: {\r\n            responsive: true, // Enable responsiveness\r\n            maintainAspectRatio: false,\r\n            aspectRatio: 1,\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true // Start the Y-axis at 0\r\n                }\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: false // Hide the legend\r\n                },\r\n                tooltip: {\r\n                    callbacks: {\r\n                        label: function (context) {\r\n                            var dataIndex = context.dataIndex;\r\n                            var tooltipLabel = data[dataIndex];\r\n                            var taskLabel = xpData[dataIndex].task;\r\n                            return `Amount: ${tooltipLabel}\\nTask: ${taskLabel}`;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return XPprogressChart\r\n}\r\n\r\nfunction convertBytesToSize(bytes, size) {\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\"];\r\n    if (bytes === 0) {\r\n        return \"0 Byte\";\r\n    }\r\n    var i = -1\r\n    size != null ? i = sizes.indexOf(size) : i = Math.floor(Math.log(bytes) / Math.log(1000))\r\n    const convertedValue = parseFloat((bytes / Math.pow(1000, i)).toFixed(2));\r\n    return {\r\n        amount: convertedValue,\r\n        size: sizes[i]\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Router from './router/Router';\r\nimport { loginPage } from './src/loginPage';\r\nimport { mainPage } from './src/mainPage';\r\n\r\nconst router = new Router({\r\n  mode: 'hash',\r\n  root: '/'\r\n});\r\n\r\nrouter\r\n  .add(/login/, () => {\r\n    loginPage(router)\r\n  })\r\n  .add('', () => {\r\n    mainPage(router)\r\n  })","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}