{"version":3,"sources":["router/Router.js","src/loginPage.js","src/mainPage.js","index.js"],"names":["Router","_createClass","options","_this","_classCallCheck","_defineProperty","path","cb","routes","push","i","length","slice","toString","replace","fragment","mode","clearSlashes","decodeURI","window","location","pathname","search","root","match","href","arguments","undefined","history","pushState","concat","clearInterval","interval","setInterval","current","getFragment","some","route","shift","apply","listen","_default","exports","default","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","err","loginPage","router","_ref","JWToken","sessionStorage","getItem","app","document","getElementById","innerHTML","container","createElement","className","append","content","title","form","id","username","required","placeholder","password","button","addEventListener","_x","_callee","cred","response","data","_callee$","_context","preventDefault","btoa","fetch","headers","ok","json","setItem","navigate","status","alert","mainPage","_mainPage","resp","body","JSON","stringify","query","usersData","user","clear","header","style","marginTop","basicInformationBlock","currLevelElement","transactions","filter","element","includes","reduce","prevElement","currentElement","amount","split","attrs","firstName","lastName","email","login","studentAuditsCont","AuditRatioLb","userAuditRatio","auditR","Math","round","totalUp","totalDown","console","log","color","auditGraphCont","width","generateAuditRateGraph","convertBytesToSize","xps","sum","total","studentXpCont","userXPAmount","size","graphCont","generateXPProgressGraph","audits","canvas","setAttribute","verticalLineData","el","Chart","labels","datasets","backgroundColor","indexAxis","responsive","aspectRatio","plugins","legend","display","tooltip","callbacks","label","context","dataIndex","scales","x","beginAtZero","position","grid","bar","barThickness","XPprogressChart","xpData","map","entity","date","Date","createdAt","xp","task","sort","b","toLocaleDateString","fill","borderColor","pointBackgroundColor","maintainAspectRatio","tooltipLabel","taskLabel","bytes","sizes","indexOf","floor","parseFloat","pow","toFixed","_Router","_interopRequireDefault","require","_loginPage","obj","__esModule","add"],"mappings":"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","file":"graphql.8ac123ac.js","sourceRoot":"..","sourcesContent":["class Router {\r\n  routes = [];\r\n\r\n  mode = null;\r\n\r\n  root = '/';\r\n\r\n  constructor(options) {\r\n    this.mode = window.history.pushState ? 'history' : 'hash';\r\n    if (options.mode) this.mode = options.mode;\r\n    if (options.root) this.root = options.root;\r\n    this.listen();\r\n  }\r\n\r\n  add = (path, cb) => {\r\n    this.routes.push({ path, cb });\r\n    return this;\r\n  };\r\n\r\n  remove = path => {\r\n    for (let i = 0; i < this.routes.length; i += 1) {\r\n      if (this.routes[i].path === path) {\r\n        this.routes.slice(i, 1);\r\n        return this;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  flush = () => {\r\n    this.routes = [];\r\n    return this;\r\n  };\r\n\r\n  clearSlashes = path =>\r\n    path\r\n      .toString()\r\n      .replace(/\\/$/, '')\r\n      .replace(/^\\//, '');\r\n\r\n  getFragment = () => {\r\n    let fragment = '';\r\n    if (this.mode === 'history') {\r\n      fragment = this.clearSlashes(decodeURI(window.location.pathname + window.location.search));\r\n      fragment = fragment.replace(/\\?(.*)$/, '');\r\n      fragment = this.root !== '/' ? fragment.replace(this.root, '') : fragment;\r\n    } else {\r\n      const match = window.location.href.match(/(.*)$/);\r\n      fragment = match ? match[1] : '';\r\n    }\r\n    return this.clearSlashes(fragment);\r\n  };\r\n\r\n  navigate = (path = '') => {\r\n    if (this.mode === 'history') {\r\n      window.history.pushState(null, null, this.root + this.clearSlashes(path));\r\n    } else {\r\n      window.location.href = `${window.location.href.replace(/(.*)$/, '')}${path}`;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  listen = () => {\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(this.interval, 50);\r\n  };\r\n\r\n  interval = () => {\r\n    if (this.current === this.getFragment()) return;\r\n    this.current = this.getFragment();\r\n\r\n    this.routes.some(route => {\r\n      const match = this.current.match(route.path);\r\n      if (match) {\r\n        match.shift();\r\n        route.cb.apply({}, match);\r\n        return match;\r\n      }\r\n      return false;\r\n    });\r\n  };\r\n}\r\n\r\nexport default Router;\r\n","\r\n\r\nexport function loginPage(router){\r\n    let JWToken = sessionStorage.getItem('JWToken')\r\n    if (JWToken != null && JWToken != undefined){\r\n        router.navigate(\"/graphql\")\r\n        return\r\n    }\r\n    let app = document.getElementById(\"app\")\r\n    app.innerHTML = \"\"\r\n    \r\n    \r\n\r\n    let container = document.createElement('div')\r\n    container.className = \"container\"\r\n    app.append(container)\r\n\r\n    let content = document.createElement('div')\r\n    content.className = \"content\"\r\n    container.append(content)\r\n\r\n    let title = document.createElement(\"h2\")\r\n    title.innerHTML = \"Login\"\r\n    content.append(title)\r\n\r\n    let form = document.createElement(\"form\")\r\n    form.id = \"loginForm\"\r\n    content.append(form)\r\n    \r\n    let username = document.createElement(\"input\")\r\n    username.type = \"text\"\r\n    username.name = \"username\"\r\n    username.required = true\r\n    username.placeholder = \"Enter your username\"\r\n\r\n    let password = document.createElement(\"input\")\r\n    password.type = \"password\"\r\n    password.name = \"password\"\r\n    password.required = true\r\n    password.placeholder = \"Enter your password\"\r\n\r\n    let button = document.createElement(\"button\")\r\n    button.type = \"submit\"\r\n    button.name = \"username\"\r\n    button.innerHTML = \"submit\"\r\n\r\n    form.append(username,password,button)\r\n\r\n    form.addEventListener(\"submit\", async function(e){\r\n        e.preventDefault();\r\n        const cred = btoa(`${username.value}:${password.value}`)\r\n\r\n        const response = await fetch('https://01.kood.tech/api/auth/signin',{\r\n            method:'POST',\r\n            headers:{\r\n                'Authorization': `Basic ${cred}`\r\n            }\r\n        });\r\n\r\n        if(response.ok){\r\n            const data = await response.json();\r\n            sessionStorage.setItem(\"JWToken\",data);\r\n            router.navigate('/graphql')\r\n        }else{\r\n            \r\n            (response.status === 403 ? (alert('Incorrect password'),password.value = '') : (alert('User doesnt exist'),form.reset()))\r\n        }\r\n    })\r\n\r\n    \r\n}","export async function mainPage(router){\r\n    \r\n    const JWToken = sessionStorage.getItem('JWToken');\r\n    if (JWToken === null || JWToken === undefined) {\r\n        router.navigate('/graphql/login')\r\n        return\r\n    }\r\n\r\n    const response = await fetch(\"https://01.kood.tech/api/graphql-engine/v1/graphql\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Authorization': `Bearer ${JWToken}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            query:`\r\n            {\r\n                user{\r\n                    id\r\n                    login\r\n                    profile\r\n                    attrs\r\n                    totalUp\r\n                    totalDown\r\n                    transactions(order_by: { createdAt: desc }) {\r\n                        id\r\n                        type\r\n                        amount\r\n                        createdAt\r\n                        path\r\n                    }\r\n                }\r\n            }\r\n            \r\n            `\r\n        })\r\n    });\r\n    \r\n    const resp = await response.json()\r\n\r\n    const user = resp.data.user\r\n\r\n    usersData(user[0])\r\n    let logout = document.getElementById(\"logout\")\r\n    logout.addEventListener(\"click\", function(){\r\n        let JWToken = sessionStorage.getItem(\"JWToken\")\r\n        if (JWToken != null && JWToken != undefined) {\r\n            sessionStorage.clear();\r\n            router.navigate('/graphql/login')\r\n        }\r\n    })\r\n\r\n}\r\n\r\nfunction usersData(user){\r\n    let app = document.getElementById(\"app\")\r\n    let header = document.createElement(\"h1\")\r\n    header.className = \"main_header\"\r\n    header.innerHTML = \"GRAPHQL\"\r\n\r\n    app.append(header)\r\n    let container = document.createElement(\"div\")\r\n    container.className = \"container\"\r\n    container.style.marginTop = 2+'%'\r\n    app.append(container)\r\n\r\n    //user information\r\n    let basicInformationBlock = document.createElement(\"div\")\r\n    basicInformationBlock.className = \"basicInformationBlock\"\r\n    container.append(basicInformationBlock)\r\n    \r\n    const currLevelElement = user.transactions\r\n        .filter(element => element.type === \"level\" && !element.path.includes(\"piscine\") && !element.path.includes(\"rust\"))\r\n        .reduce((prevElement, currentElement) => {\r\n            return currentElement.amount > prevElement.amount ? currentElement : prevElement;\r\n    });\r\n\r\n    const path = currLevelElement.path.split(\"/\").reverse()[0]\r\n\r\n    basicInformationBlock.innerHTML = `\r\n         <h1>Welcome, ${user.attrs.firstName} ${user.attrs.lastName}</h1>\r\n         <p>${user.attrs.email}</p><p>${user.login}</p>\r\n         <p>Level: ${currLevelElement.amount}</p>\r\n         <p>Last completed task: ${path}</p>\r\n         <button id=\"logout\" style=\"margin-left:0;\">Logout</button>\r\n        \r\n    `\r\n\r\n    \r\n\r\n    //audits \r\n    let studentAuditsCont = document.createElement('div')\r\n    studentAuditsCont.className = 'auditsInformationCharts'\r\n    let AuditRatioLb = document.createElement('p')\r\n    AuditRatioLb.innerHTML = `Audits ratio`\r\n    let userAuditRatio = document.createElement('p')\r\n    let auditR = Math.round((user.totalUp / user.totalDown) * 10) / 10\r\n    console.log(auditR)\r\n    auditR > 0.4 ? userAuditRatio.innerHTML = `${auditR} Almost perfect!` : userAuditRatio.innerHTML = `${auditR} You are careful buddy.`\r\n    auditR > 0.4 ? userAuditRatio.style.color = 'hsl(170, 100%, 50%)' : userAuditRatio.style.color = 'hsl(340, 100%, 50%)'\r\n    let auditGraphCont = document.createElement('div')\r\n    auditGraphCont.style.width = '100%'\r\n    auditGraphCont.append(generateAuditRateGraph([convertBytesToSize(user.totalUp, \"MB\").amount, convertBytesToSize(user.totalDown, \"MB\").amount]))\r\n    studentAuditsCont.append(AuditRatioLb, auditGraphCont, userAuditRatio)\r\n\r\n    \r\n\r\n    //XPAmount\r\n    const xps = user.transactions.filter(element => element.type === \"xp\" && !element.path.includes(\"piscine\") && !element.path.includes(\"rust\"));\r\n    const sum = convertBytesToSize(xps.reduce((total, element) => total + element.amount, 0));\r\n    \r\n\r\n    let studentXpCont = document.createElement('div')\r\n    studentXpCont.className = 'xpcount'\r\n    let userXPAmount = document.createElement('p')\r\n    userXPAmount.innerHTML = `XP ${sum.amount} ${sum.size}`\r\n    let graphCont = document.createElement('div')\r\n    graphCont.className = 'graph-container'\r\n    graphCont.append(generateXPProgressGraph(xps))\r\n    studentXpCont.append(userXPAmount, graphCont)\r\n    \r\n\r\n    container.append(studentAuditsCont,studentXpCont)\r\n\r\n    \r\n\r\n    \r\n}\r\n\r\n\r\nfunction generateAuditRateGraph(audits) {\r\n    var canvas = document.createElement('canvas');\r\n    canvas.setAttribute('id', 'audit-chart');\r\n    var verticalLineData = ['done', 'received'];// Data for the chart\r\n    verticalLineData.forEach((el, i) => {\r\n        verticalLineData[i] = `${el}: ${audits[i]} MB`;\r\n    });\r\n    console.log(verticalLineData)\r\n    console.log(audits)\r\n    var horizontalBarChart = new Chart(canvas, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: verticalLineData,\r\n            datasets: [{\r\n                data: audits,\r\n                backgroundColor: [\r\n                    'hsl(170, 100%, 50%)', // first bar\r\n                    'hsl(0, 0%, 80%)', // second bar\r\n                ]\r\n            }]\r\n        },\r\n        options: {\r\n            indexAxis: 'y', // Rotate the chart to horizontal layout\r\n            responsive: true, // Make the chart responsive\r\n            aspectRatio: 4,\r\n            plugins: {\r\n                legend: {\r\n                    display: false \r\n                },\r\n                tooltip: {\r\n                    callbacks: {\r\n                        label: function (context) {\r\n                            let dataIndex = context.dataIndex;\r\n                            let value = audits[dataIndex];\r\n                            let label = verticalLineData[dataIndex];\r\n                            return `${value} MB`;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    display: false, \r\n                    beginAtZero: true // Start the X-axis at 0\r\n                },\r\n                y: {\r\n                    position: 'right',\r\n                    grid: {\r\n                        display: false // Hide the y-axis grid lines\r\n                    }\r\n                }\r\n            },\r\n            datasets: {\r\n                bar: {\r\n                    barThickness: 10 // Adjust the height of the bars\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return canvas\r\n}\r\n\r\nfunction generateXPProgressGraph(xps) {\r\n    let XPprogressChart = document.createElement('canvas');\r\n    XPprogressChart.setAttribute('id', 'chart');\r\n    var xpData = xps.map(function (entity) {\r\n        return {\r\n            date: new Date(entity.createdAt),\r\n            xp: entity.amount,\r\n            task: entity.path.split('/')[entity.path.split('/').length - 1]\r\n        };\r\n    });\r\n    // Sort the XP data by date in ascending order\r\n    xpData.sort(function (a, b) {\r\n        return a.date - b.date;\r\n    });\r\n    for (let i = 1; i < xpData.length; i++) {\r\n        xpData[i].xp += xpData[i - 1].xp;\r\n    }\r\n    var labels = xpData.map(function (data) {\r\n        return data.date.toLocaleDateString(); \r\n    });\r\n    var data = xpData.map(function (data) {\r\n        return convertBytesToSize(data.xp, \"KB\").amount;\r\n    });\r\n    var myChart = new Chart(XPprogressChart, {\r\n        type: 'line', \r\n        data: {\r\n            labels: labels, \r\n            datasets: [{\r\n                label: 'XP Earned', // Label for the dataset\r\n                data: data, // Y-axis data (XP amounts)\r\n                fill: false, \r\n                borderColor: 'hsl(260, 100%, 80%)',\r\n                pointBackgroundColor: 'black',\r\n            }]\r\n        },\r\n        options: {\r\n            responsive: true, // Enable responsiveness\r\n            maintainAspectRatio: false,\r\n            aspectRatio: 1,\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true // Start the Y-axis at 0\r\n                }\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: false // Hide the legend\r\n                },\r\n                tooltip: {\r\n                    callbacks: {\r\n                        label: function (context) {\r\n                            var dataIndex = context.dataIndex;\r\n                            var tooltipLabel = data[dataIndex];\r\n                            var taskLabel = xpData[dataIndex].task;\r\n                            return `Amount: ${tooltipLabel}\\nTask: ${taskLabel}`;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return XPprogressChart\r\n}\r\n\r\nfunction convertBytesToSize(bytes, size) {\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\"];\r\n    if (bytes === 0) {\r\n        return \"0 Byte\";\r\n    }\r\n    var i = -1\r\n    size != null ? i = sizes.indexOf(size) : i = Math.floor(Math.log(bytes) / Math.log(1000))\r\n    const convertedValue = parseFloat((bytes / Math.pow(1000, i)).toFixed(2));\r\n    return {\r\n        amount: convertedValue,\r\n        size: sizes[i]\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Router from './router/Router';\r\nimport { loginPage } from './src/loginPage';\r\nimport { mainPage } from './src/mainPage';\r\n\r\nconst router = new Router({\r\n  mode: 'hash',\r\n  root: '/graphql'\r\n});\r\n\r\nrouter\r\n  .add(/login/, () => {\r\n    loginPage(router)\r\n  })\r\n  .add(/graphql/, () => {\r\n    mainPage(router)\r\n  })"]}